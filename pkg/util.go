package pkg

import (
	"crypto/tls"
	"encoding/json"
	"net/http"
)

type ComplimentResponse struct {
	Success bool   `json:"success"`
	Text    string `json:"va"`
}

// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

// GetCompliment
//
//	curl 'http://castlots.org/generator-komplimentov-devushke/generate.php' \
//	  -X 'POST' \
//	  -H 'Accept: application/json, text/javascript, */*; q=0.01' \
//	  -H 'Accept-Language: en-US,en;q=0.9,ru;q=0.8' \
//	  -H 'Connection: keep-alive' \
//	  -H 'Content-Length: 0' \
//	  -H 'Origin: http://castlots.org' \
//	  -H 'Referer: http://castlots.org/generator-komplimentov-devushke/' \
//	  -H 'User-Agent: Mozilla/5.0 (Linux; Android 8.0.0; SM-G955U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Mobile Safari/537.36' \
//	  -H 'X-Requested-With: XMLHttpRequest' \
//	  --compressed \
//	  --insecure
func GetCompliment() (*ComplimentResponse, error) {
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}

	req, err := http.NewRequest("POST", "http://castlots.org/generator-komplimentov-devushke/generate.php", nil)
	if err != nil {
		return nil, err
	}
	req.Header.Set("Accept", "application/json, text/javascript, */*; q=0.01")
	req.Header.Set("Accept-Language", "en-US,en;q=0.9,ru;q=0.8")
	req.Header.Set("Connection", "keep-alive")
	req.Header.Set("Content-Length", "0")
	req.Header.Set("Origin", "http://castlots.org")
	req.Header.Set("Referer", "http://castlots.org/generator-komplimentov-devushke/")
	req.Header.Set("User-Agent", "Mozilla/5.0 (Linux; Android 8.0.0; SM-G955U Build/R16NW) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Mobile Safari/537.36")
	req.Header.Set("X-Requested-With", "XMLHttpRequest")

	resp, err := client.Do(req)
	if err != nil {
		return nil, err
	}
	defer resp.Body.Close()

	c := &ComplimentResponse{}
	if err = json.NewDecoder(resp.Body).Decode(c); err != nil {
		return nil, err
	}

	return c, nil
}
